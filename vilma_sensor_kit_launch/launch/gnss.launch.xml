<launch>
  <arg name="launch_driver" default="true"/>
  <arg name="gnss_receiver" default="xsens" description="xsenx MTi GPS RTK receiver (default)"/>

  <group>
    <push-ros-namespace namespace="gnss"/>

    <!-- Switch topic name -->
    <let name="navsatfix_topic_name" value="/gnss"/>

    <let name="orientation_topic_name" value="/autoware_orientation"/>

    <!-- xsens GPS-RTK Driver -->
    <group if="$(eval &quot;'$(var launch_driver)'&quot;)">
      <!-- Launch xsens -->
      <include file="$(find-pkg-share xsens_mti_ros2_driver)/launch/xsens_mti_node.launch.py"/>
      <!-- Launch ntrip -->
      <include file="$(find-pkg-share ntrip)/launch/ntrip_launch.py"/>
      <!-- Running Autoware INS orientation node -->
      <node pkg="autoware_ins" name="autoware_ins" exec="autoware_ins_node" if="$(var launch_driver)" respawn="true" respawn_delay="1.0">
        <param from="$(find-pkg-share autoware_ins)/config/autoware_ins-params.yaml"/>
      </node>
    </group>

    <!-- <arg name="gnss_frame" value="gps"/> -->

    <!-- NavSatFix to MGRS Pose -->
    <include file="$(find-pkg-share autoware_gnss_poser)/launch/gnss_poser.launch.xml">
      <arg name="input_topic_fix" value="$(var navsatfix_topic_name)"/>
      <arg name="input_topic_orientation" value="$(var orientation_topic_name)"/>

      <arg name="output_topic_gnss_pose" value="pose"/>
      <arg name="output_topic_gnss_pose_cov" value="pose_with_covariance"/>
      <arg name="output_topic_gnss_fixed" value="fixed"/>

      <arg name="use_gnss_ins_orientation" value="true"/>

      <arg name="gnss_frame" value="gnss_link"/>
    </include>
  </group>
</launch>
